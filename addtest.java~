package Hogwarts;

import java.io.*;
import javax.swing.*;
import java.util.*;
import java.awt.*;
import java.awt.event.*;
import java.net.URL;
import javax.imageio.ImageIO;
import javax.sound.sampled.*;
import sun.audio.*;
import java.awt.*;
import java.awt.AlphaComposite;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GridBagLayout;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

public class addtest extends javax.swing.JFrame{

   ArrayList<Charm> ch = new ArrayList<Charm>();
  ArrayList<Curse> cu = new ArrayList<Curse>();
  ArrayList<Jinx> ji = new ArrayList<Jinx>();
  ArrayList<Healing> he = new ArrayList<Healing>();
  ArrayList<Protective> pr = new ArrayList<Protective>();

    /**
    /**
     * Creates new form edittest
     */
    public addtest() { 
      add(new addframe());
      fileRead();
      initComponents();
    }

           private void fileRead()
   {
     //開啟檔案
     fr = null;
     try
     {
       fr = new FileReader("Hogwarts/data.txt");
     }
     catch(IOException e)
     {
       JOptionPane.showMessageDialog(null, "檔案開啟錯誤");
       System.exit(-1);
     }
    br = new BufferedReader(fr);
     //開啟檔案
     
     //檔案處理
     try
     {
       input = br.readLine();
       
       while(input != null)
       {
         st = new StringTokenizer(input, ";");
         temp = st.nextToken();
         if(temp.equals("Charm")){
         ch.add(new Charm(temp, st.nextToken(), st.nextToken(), st.nextToken()));
         input = br.readLine();
         }
         else if(temp.equals("Jinx")){
         ji.add(new Jinx(temp, st.nextToken(), st.nextToken(), st.nextToken()));
         input = br.readLine();
         }
         else if(temp.equals("Curse")){
         cu.add(new Curse(temp, st.nextToken(), st.nextToken(), st.nextToken()));
         input = br.readLine();
         }
         else if(temp.equals("Healing")){
         he.add(new Healing(temp, st.nextToken(), st.nextToken(), st.nextToken()));
         input = br.readLine();
         }
         else{
         pr.add(new Protective(temp, st.nextToken(), st.nextToken(), st.nextToken()));
         input = br.readLine();
         }
       }
     }
     catch(IOException e)
     {
       JOptionPane.showMessageDialog(null, "資料讀取錯誤");
       System.exit(-2);
     }
     catch(NumberFormatException e)
     {
       JOptionPane.showMessageDialog(null, "數字轉換錯誤");
       System.exit(-3);
     }
     //檔案處理
     
     //關閉檔案
     try
     {
       br.close();
     }
     catch(IOException e)
     {
       JOptionPane.showMessageDialog(null, "檔案無法關閉");
     }
     //關閉檔案
     
   }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
      
     setUndecorated(true);
     setBackground(new Color(0, 255, 0, 0));
      

     setContentPane(new addframe());
     getContentPane().setBackground(Color.BLACK);
     setLayout(new BorderLayout());
     
        Name = new javax.swing.JLabel();
        Type = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextArea2 = new TransparentTextArea("");
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextArea1 = new TransparentTextArea("");
        Modify = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Name.setText("Name");
        Name.setFont(new java.awt.Font("新細明體", 0, 20));

        Type.setText("Type");
        Type.setFont(new java.awt.Font("新細明體", 0, 20));

        jLabel3.setText("Description");
        jLabel3.setFont(new java.awt.Font("新細明體", 0, 20));

        jTextArea2.setText("");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Charm", "Curse", "Jinx", "Healing","Protective" }));

        jTextArea1.setText("");
        jTextArea1.setLineWrap(true);
        jTextArea1.setWrapStyleWord(true);

        Modify.setText("Add");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Modify)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextArea2, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(Type, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextArea2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Type, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(Modify)
                .addGap(29, 29, 29))
        );
Modify.addActionListener(new AddHandler());
        pack();
    }// </editor-fold>     
     
    private class AddHandler implements ActionListener{
      public void actionPerformed(ActionEvent evt) {
     //增加
      fw = null;
     try
     {
       fw = new FileWriter("Hogwarts/data.txt");
     }
     catch(IOException e)
     {
       JOptionPane.showMessageDialog(null, "檔案開啟錯誤");
       System.exit(-1);
     }
                      PrintWriter pw = new PrintWriter(fw);
                      //開啟檔案
       if(jComboBox1.getSelectedIndex() == 0){
        pw.println("Charm;" + jTextArea2.getText() + ";" + jTextArea1.getText()+ ";https://i.imgur.com/YCLOy2V.gif");
      }
      else if(jComboBox1.getSelectedIndex() == 1){
        pw.println("Curse;" + jTextArea2.getText() + ";" + jTextArea1.getText()+ ";https://i.imgur.com/YCLOy2V.gif");
      }
      else if(jComboBox1.getSelectedIndex() == 2){
        pw.println( "Jinx;" + jTextArea2.getText() + ";" + jTextArea1.getText()+ ";https://i.imgur.com/YCLOy2V.gif");
      }
      else if(jComboBox1.getSelectedIndex() == 3){
        pw.println("Healing;" + jTextArea2.getText() + ";" + jTextArea1.getText()+ ";https://i.imgur.com/YCLOy2V.gif");
      }
      else if(jComboBox1.getSelectedIndex() == 4){
        pw.println("Protective;" + jTextArea2.getText() + ";" + jTextArea1.getText()+ ";https://i.imgur.com/YCLOy2V.gif");
      }
      //寫入資料
                      for(j = 0 ; j < ch.size() ; j++)
                      {
                        pw.println(ch.get(j).getType() + ";" + ch.get(j).getName() + ";" + ch.get(j).getDesc()+ ";" + ch.get(j).getPath());
                      }
                      for(j = 0 ; j < cu.size() ; j++)
                      {
                        pw.println(cu.get(j).getType() + ";" + cu.get(j).getName() + ";" + cu.get(j).getDesc()+ ";" + cu.get(j).getPath());
                      }
                      for(j = 0 ; j < ji.size() ; j++)
                      {
                        pw.println(ji.get(j).getType() + ";" + ji.get(j).getName() + ";" + ji.get(j).getDesc()+ ";" + ji.get(j).getPath());
                      }
                      for(j = 0 ; j < he.size() ; j++)
                      {
                        pw.println(he.get(j).getType() + ";" + he.get(j).getName() + ";" + he.get(j).getDesc()+ ";" + he.get(j).getPath());
                      }
                      for(j = 0 ; j < pr.size() ; j++)
                      {
                        pw.println(pr.get(j).getType() + ";" + pr.get(j).getName() + ";" + pr.get(j).getDesc()+ ";" + pr.get(j).getPath());
                      }
                      pw.close();
                      JOptionPane.showMessageDialog(null, "Write Successfully!");
        NewJFrame1 frame = new NewJFrame1();
        frame.setVisible(true);
        frame.setLocationRelativeTo(null);
        CloseFrame();
        }    
    }

    public void CloseFrame(){
    super.dispose();
}
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addtest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addtest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addtest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addtest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addtest().setVisible(true);
            }
        });
}

    // Variables declaration - do not modify         
    private StringTokenizer st;
    private String input;
    private String temp;
    private int i, j, k, chr,n;
    private Image image;
    private URL url;
    private FileReader fr;
    private FileWriter fw;
    private BufferedReader br;
    private javax.swing.JButton Modify;
    private javax.swing.JLabel Name;
    private javax.swing.JLabel Type;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration                   
    }